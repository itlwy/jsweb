0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/node-v4.4.7-linux-x64/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.15.8
3 info using node@v4.4.7
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/cos/src/jsweb',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/cos/.npm/jsweb/0.0.20/package.tgz not in flight; packing
9 verbose correctMkdir /home/cos/.npm correctMkdir not in flight; initializing
10 verbose tar pack [ '/home/cos/.npm/jsweb/0.0.20/package.tgz',
10 verbose tar pack   '/home/cos/src/jsweb' ]
11 verbose tarball /home/cos/.npm/jsweb/0.0.20/package.tgz
12 verbose folder /home/cos/src/jsweb
13 info prepublish jsweb@0.0.20
14 verbose addLocalTarball adding from inside cache /home/cos/.npm/jsweb/0.0.20/package.tgz
15 verbose correctMkdir /home/cos/.npm correctMkdir not in flight; initializing
16 silly cache afterAdd jsweb@0.0.20
17 verbose afterAdd /home/cos/.npm/jsweb/0.0.20/package/package.json not in flight; writing
18 verbose correctMkdir /home/cos/.npm correctMkdir not in flight; initializing
19 verbose afterAdd /home/cos/.npm/jsweb/0.0.20/package/package.json written
20 silly publish { name: 'jsweb',
20 silly publish   version: '0.0.20',
20 silly publish   description: 'A Simple Web Server with js.',
20 silly publish   main: 'index.js',
20 silly publish   bin: { jsweb: 'bin/jsweb.js' },
20 silly publish   dependencies:
20 silly publish    { pg: '*',
20 silly publish      hjs: '*',
20 silly publish      mssql: '*',
20 silly publish      mysql: '*',
20 silly publish      st: '*',
20 silly publish      express: '*',
20 silly publish      'body-parser': '*' },
20 silly publish   scripts: {},
20 silly publish   repository:
20 silly publish    { type: 'git',
20 silly publish      url: 'git+ssh://git@github.com/jsPLNE/jsweb.git' },
20 silly publish   keywords: [ 'web', 'api', 'framework' ],
20 silly publish   author: { name: 'Gxy' },
20 silly publish   license: 'MIT',
20 silly publish   readme: '# jsWeb - Simple Web Server with Javascript\n\njsWeb is a program to simplify web api based on express development.\nAfter installed jsweb, just write the express request handle js file and put them to the correctly directlry. Start with command:\n\n```\n  > jsweb [/path/to/site/home]\n```\n\n# Features\n\n* Everythings of the site in single folder.\n* Multiple port support, each port is a standalone process\n* Auto reload, Add/Modify/Delete api file doesn\'t need restart server\n* Plugins load before real api method load to prepare system like database object or connection\n\n\n** NOTICE for windows user: use `#` instead `::` as api folder prefix delimiter**\n\n\n# Step by step\n\n## Step 1 : Install jsweb as system command\n```\n    > sudo npm install jsweb -g\n```\n## Step 2 : Test if jsweb install correctly\n\n```\n   > jsweb\n   Can not find any directory contain jsWeb at : /home/usersrc/jsweb\n   Please visit https://github.com/jsplne/jsweb for more details.\n   \n```\n\n## Step 3 : Create your app directory or get demos\n```\n   get demo project from https://github.com/jsplne/jsweb-demo-linux\n   get demo project from https://github.com/jsplne/jsweb-demo-windows\n```\n\n## Step 4 : Run\n```\n  > jsweb [/path/to/web/site/home]\n```\n\n## Step 5 : Test the result\n```\n  > wget -q -O- "http://localhost:8000/api/hello"\n```\n\n\n# Namings\n\n## API folder name\n\nBy default every file inside the `<home>` folder is a static web site.\nTo make a folder contain api js file, just add `api::` to that folder name. Somethings like `api::api` will map this folder to `http://host:port/api/*`\n\n## API method name\n\n```\n   <api file name> = <api>[<[http method]>].js\n             <api> = the last section of url path\n     <http method> = standand http method like GET/POST..., default to GET method.\n```\n\n* For example `get-system-id.js` create api of `/get-system-id` api to take response of http GET of `/get-system-id`.\n* For example `upload[POST].js` create api of `/upload` api to take response of http POST to `/upload`.\n\n\n# Runtime data structure\n\nSystem information share with request callback via  : `req.jw`\n\n```\n    req.jw = {\n        app : <express object>  // system object\n               // object below is create by demo init program\n        db : {\n            pg    : <function to access Postgresql>\n            mysql : <function to access Mysql>\n            mssql : <function to access Sql server>\n        }\n    }\n```\n\n\n# Enable/Disable file\n\nSet/clear file execute flag of files to enable/disable init file or web api file to be load.\n\n# API home directory structure (demos/api-root-test-simple)\n\n```\n  <API HOME> +\n             |\n             +--"8000"                         // port to listen\n             |     +------ config\n             |     |        +-- jsweb-config.json\n             |     |\n             |     +------ init\n             |     |        +-- 01-db-pg.js     // for Postgresql\n             |     |        +-- 02-db-mssql.js  // for Sql server\n             |     |        +-- 02-db-mysql.js  // for Mysql\n             |     |\n             |     +------ vies\n             |     |        +-- login.hjs       // hjs template\n             |     |        +-- xxx.hjs\n             |     |\n             |     +------ root\n             |              +-- api::test           // in windows, use \'api#test\', linux work\'s for both\n             |              |      +-- hello.js     // http://localhost:8000/api/test/hello\n             |              |      +-- echo.js      // http://localhost:8000/api/test/echo\n             |              |      +-- db-query.js  // http://localhost:8000/api/test/db-query\n             |              |      +-- other\n             |              |          +-- hello.js     // http://localhost:8000/api/test/other/hello\n             |              |          +-- echo.js      // http://localhost:8000/api/test/other/echo\n             |              +-- index.html\n             |              +-- others\n             |                    +-- others\n             +--<port 2>\n             | \n             ...\n\n```\n',
20 silly publish   readmeFilename: 'README.md',
20 silly publish   gitHead: '64e9610fbaff872848d5690e21418ebb6ffff276',
20 silly publish   bugs: { url: 'https://github.com/jsPLNE/jsweb/issues' },
20 silly publish   homepage: 'https://github.com/jsPLNE/jsweb#readme',
20 silly publish   _id: 'jsweb@0.0.20',
20 silly publish   _shasum: '64f0cf3f87896e661cd3561e6623fc89cf398507',
20 silly publish   _from: '.' }
21 verbose getPublishConfig undefined
22 silly mapToRegistry name jsweb
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npmjs.org/
25 silly mapToRegistry data Result {
25 silly mapToRegistry   raw: 'jsweb',
25 silly mapToRegistry   scope: null,
25 silly mapToRegistry   name: 'jsweb',
25 silly mapToRegistry   rawSpec: '',
25 silly mapToRegistry   spec: 'latest',
25 silly mapToRegistry   type: 'tag' }
26 silly mapToRegistry uri https://registry.npmjs.org/jsweb
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /home/cos/.npm/jsweb/0.0.20/package.tgz
29 verbose request uri https://registry.npmjs.org/jsweb
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 8:43:54 PM
32 verbose request using bearer token for auth
33 verbose request id 2da449fcf121028c
34 http request PUT https://registry.npmjs.org/jsweb
35 http 403 https://registry.npmjs.org/jsweb
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '96',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Thu, 18 Aug 2016 12:44:20 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-hkg6820-HKG',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1471524259.643038,VS0,VE984',
36 verbose headers   vary: 'Accept-Encoding' }
37 verbose request invalidating /home/cos/.npm/registry.npmjs.org/jsweb on PUT
38 error publish Failed PUT 403
39 verbose stack Error: "You cannot publish over the previously published version 0.0.20." : jsweb
39 verbose stack     at makeError (/usr/local/node-v4.4.7-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/node-v4.4.7-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at Request._callback (/usr/local/node-v4.4.7-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
39 verbose stack     at Request.self.callback (/usr/local/node-v4.4.7-linux-x64/lib/node_modules/npm/node_modules/request/request.js:200:22)
39 verbose stack     at emitTwo (events.js:87:13)
39 verbose stack     at Request.emit (events.js:172:7)
39 verbose stack     at Request.<anonymous> (/usr/local/node-v4.4.7-linux-x64/lib/node_modules/npm/node_modules/request/request.js:1067:10)
39 verbose stack     at emitOne (events.js:82:20)
39 verbose stack     at Request.emit (events.js:169:7)
39 verbose stack     at IncomingMessage.<anonymous> (/usr/local/node-v4.4.7-linux-x64/lib/node_modules/npm/node_modules/request/request.js:988:12)
40 verbose statusCode 403
41 verbose pkgid jsweb
42 verbose cwd /home/cos/src/jsweb
43 error Linux 3.2.0-29-generic
44 error argv "/usr/local/node-v4.4.7-linux-x64/bin/node" "/usr/local/bin/npm" "publish"
45 error node v4.4.7
46 error npm  v2.15.8
47 error code E403
48 error "You cannot publish over the previously published version 0.0.20." : jsweb
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]

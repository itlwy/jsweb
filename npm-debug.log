0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.15.9
3 info using node@v4.5.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/gxy/src/jsweb',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/gxy/.npm/jsweb/0.2.15/package.tgz not in flight; packing
9 verbose correctMkdir /home/gxy/.npm correctMkdir not in flight; initializing
10 verbose tar pack [ '/home/gxy/.npm/jsweb/0.2.15/package.tgz',
10 verbose tar pack   '/home/gxy/src/jsweb' ]
11 verbose tarball /home/gxy/.npm/jsweb/0.2.15/package.tgz
12 verbose folder /home/gxy/src/jsweb
13 info prepublish jsweb@0.2.15
14 verbose addLocalTarball adding from inside cache /home/gxy/.npm/jsweb/0.2.15/package.tgz
15 verbose correctMkdir /home/gxy/.npm correctMkdir not in flight; initializing
16 silly cache afterAdd jsweb@0.2.15
17 verbose afterAdd /home/gxy/.npm/jsweb/0.2.15/package/package.json not in flight; writing
18 verbose correctMkdir /home/gxy/.npm correctMkdir not in flight; initializing
19 verbose afterAdd /home/gxy/.npm/jsweb/0.2.15/package/package.json written
20 silly publish { name: 'jsweb',
20 silly publish   version: '0.2.15',
20 silly publish   description: 'A simple but powerful web server with js.',
20 silly publish   main: 'index.js',
20 silly publish   bin: { jsweb: 'bin/jsweb.js' },
20 silly publish   dependencies:
20 silly publish    { pg: '*',
20 silly publish      mu2: '*',
20 silly publish      mssql: '*',
20 silly publish      mysql: '*',
20 silly publish      'serve-static': '*',
20 silly publish      express: '*',
20 silly publish      'body-parser': '*',
20 silly publish      'strong-cluster-tls-store': '*',
20 silly publish      'strong-store-cluster': '^1.x' },
20 silly publish   scripts: {},
20 silly publish   repository:
20 silly publish    { type: 'git',
20 silly publish      url: 'git+ssh://git@github.com/jsPLNE/jsweb.git' },
20 silly publish   keywords: [ 'web', 'api', 'framework' ],
20 silly publish   author: { name: 'Gxy' },
20 silly publish   license: 'MIT',
20 silly publish   readme: '# jsWeb - Simple Web Server with Javascript\n\njsWeb is a program to simplify web api based on express development.\nAfter installed jsweb, just write the express request handle js file and put them to the correctly directlry. Start with command:\n\n```\n  > jsweb [/path/to/site/home]\n```\n\n# Features\n\n* Everythings of web site in single folder.\n* Multiple port support, each port is a standalone process\n* Auto reload, Add/Modify/Delete api file doesn\'t need restart server\n* Async init script loaded before real api method load to prepare system like database object or connection\n* Https support\n* Virtual host support\n* Mustache template support buildin\n* Cluster support\n* Parameter URL support\n* TLS session resume support\n\n\n# Installation\n\n```\n    $ sudo npm install jsweb -g\n```\n\n* `jsweb` is not a nodejs module but a system tools to run your web.\n\n# Run the demos\n\n```\n    $ git clone https://github.com/jsplne/jsweb-demo\n    $ jsweb jsweb-demo/static\n    $ jsweb jsweb-demo/api-server\n    $ jsweb jsweb-demo/vhost\n```\n\n# Namings\n\n```\n    name[(tag[;tag[...]])]\n```\n\n## tags for port folder\n\n* `https`  This is a https port\n\n## tags for root folder\n\n* `api`   Root folder `.js` file treat as server side script, if `index.js` exists, website homepage will be the result of `index.js`\n\n## tags for inside folder \n\n* `api`   Folder contain api script. all `.js` inside this folder will be called as api call, include subfolders.\n* `param` Folder correspond URL position will be inteperate as req.params object member, folder name as the member name, URL path will be the value\n\n## tags for api `.js` file\n\n* GET    api will called for correspond http method, if omit, all method will called.\n* POST\n* PUT\n* ... all valid HTTP method\n\n\n# Runtime data structure\n\nSystem information share with request callback via  : `req.jw`\n\n```\n    req.jw = {\n        app : <express object>  // system object\n    }\n```\n\n\n# Enable/Disable file\n\nSet/clear file execute flag of files to enable/disable init file or web api file to be load.\n\n# Directory structure (single site)\n\nSee [jsweb-demo](https://github.com/jsPLNE/jsweb-demo)\n\n\n# https certificate file generate\n\n```\n    cd /path/to/https-port/config\n    $ openssl genrsa -out jsweb.key 1024\n    $ openssl req -new -key jsweb.key -out jsweb.ca\n    $ openssl x509 -req -in jsweb.ca -signkey jsweb.key -out jsweb.cert\n```\n\n# Cluster support\n\nSet port-config.json under the port folder with key/value: `"cluster" : true`\n\n## port-config.json\n```\n{\n    "cluster" : true,\n    "tls" {\n        "key"  : "/path/to/key/file",  default to \n        "cert" : "/path/to/cert/file",\n        "ca"   : "/path/to/ca/file",\n        "rejectUnauthorized" : true | false,\n        "requestCert"        : true | false\n    }\n}\n```\n\n# About parameter URL\n\n* `api\'s` priority is higher than param `param` folder**\n* `index.js` under `param` folder will be called when url point to that folder\n* `param` can set multiple level.\n\n\n* `param` folder examples\n\n```\n  /root/org(param)/user(param)/device(param)/index.js\n  /root/org(param)/user(param)/device(param)/index.js\n```\n\n\n\n# About Views\n\nPut variables you want to reder within view to  `res.locals` and `res.render(...)`\n\n\n# `req.jw` object\n\n* `req.jw.port.home`\n* `req.jw.port.port`\n* `req.jw.port.protocol`\n* `req.jw.port.tags`\n* `req.jw.port.config`\n* `req.jw.home`\n* `req.jw.root`\n* `req.jw.config`\n* `req.jw.hostname`\n\n# `<home>/jsweb-config`\n\n* `debug`   : true or fasle\n* `cluster` : true or fase\n* `public`  : array\n',
20 silly publish   readmeFilename: 'README.md',
20 silly publish   gitHead: '09bf0c8adc8ee44a8c18902f4edcbb2cfce3c06d',
20 silly publish   bugs: { url: 'https://github.com/jsPLNE/jsweb/issues' },
20 silly publish   homepage: 'https://github.com/jsPLNE/jsweb#readme',
20 silly publish   _id: 'jsweb@0.2.15',
20 silly publish   _shasum: 'da3d2cffab83888ffc7082313dbd4380bd14ad20',
20 silly publish   _from: '.' }
21 verbose getPublishConfig undefined
22 silly mapToRegistry name jsweb
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npmjs.org/
25 silly mapToRegistry data Result {
25 silly mapToRegistry   raw: 'jsweb',
25 silly mapToRegistry   scope: null,
25 silly mapToRegistry   name: 'jsweb',
25 silly mapToRegistry   rawSpec: '',
25 silly mapToRegistry   spec: 'latest',
25 silly mapToRegistry   type: 'tag' }
26 silly mapToRegistry uri https://registry.npmjs.org/jsweb
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /home/gxy/.npm/jsweb/0.2.15/package.tgz
29 verbose request uri https://registry.npmjs.org/jsweb
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 15:54:51
32 verbose request using bearer token for auth
33 verbose request id 27e6c63458e434d7
34 http request PUT https://registry.npmjs.org/jsweb
35 http 403 https://registry.npmjs.org/jsweb
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '96',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Wed, 15 Mar 2017 07:54:52 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-hkg6822-HKG',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1489564491.324341,VS0,VE866',
36 verbose headers   vary: 'Accept-Encoding' }
37 verbose request invalidating /home/gxy/.npm/registry.npmjs.org/jsweb on PUT
38 error publish Failed PUT 403
39 verbose stack Error: "You cannot publish over the previously published version 0.2.15." : jsweb
39 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
39 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
39 verbose stack     at emitTwo (events.js:87:13)
39 verbose stack     at Request.emit (events.js:172:7)
39 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
39 verbose stack     at emitOne (events.js:82:20)
39 verbose stack     at Request.emit (events.js:169:7)
39 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
40 verbose statusCode 403
41 verbose pkgid jsweb
42 verbose cwd /home/gxy/src/jsweb
43 error Linux 3.13.0-86-generic
44 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
45 error node v4.5.0
46 error npm  v2.15.9
47 error code E403
48 error "You cannot publish over the previously published version 0.2.15." : jsweb
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
